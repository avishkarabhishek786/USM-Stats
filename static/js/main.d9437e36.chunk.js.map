{"version":3,"sources":["tokens.js","oracles.js","redux/actions.js","redux/interactions/cdp.js","redux/interactions/erc20.js","redux/interactions/oracles.js","redux/interactions.js","redux/selectors.js","utils.js","HealthCard.js","OracleCard.js","USMCard.js","FUMCard.js","App.js","redux/reducers.js","redux/configure.js","serviceWorker.js","index.js"],"names":["usm","name","abi","address","fum","chainlink","compound","uniswap","coingecko","median","networkLoaded","provider","type","usmLoaded","fumLoaded","setLatestOraclePrice","source","price","setCollateral","collateral","setEthBuffer","ethBuffer","setUSMPrice","buyPrice","sellPrice","setFUMPrice","setTotalSupply","tokenName","supply","setMints","mints","setBurns","burns","loadCollateralData","dispatch","contract","a","getCollateral","getDebtRatio","getEthBuffer","getUSMPrice","getFUMPrice","ethPool","formattedCollateral","ethers","utils","formatEther","debtRatio","ratio","formattedRatio","formattedBuffer","usmPrice","formattedBuyPrice","formattedSellPrice","fumPrice","loadERC20Data","token","tokenContract","getTotalSupply","getTotalMints","getTotalBurns","erc20Contract","totalSupply","formattedSupply","mintFilter","filters","Transfer","constants","AddressZero","queryFilter","length","burnFilter","loadOracleData","getCoingeckoPrice","getChainlinkPrice","getCompoundPrice","getUniswapPrice","getMedianPrice","axios","get","then","response","data","ethereum","usd","catch","error","console","log","latestChainlinkPrice","formattedPrice","latestCompoundPrice","latestUniswapTWAPPrice","latestPrice","loadNetwork","providers","JsonRpcProvider","loadUSM","loadFUM","getNetwork","network","chainId","usmContract","Contract","fumContract","networkProviderSelector","createSelector","state","w","usmSupplySelector","usmMintsSelector","usmBurnsSelector","usmCollateralSelector","usmDebtRatioSelector","usmEthBufferSelector","usmBuyPriceSelector","usmSellPriceSelector","fumSupplySelector","fumMintsSelector","fumBurnsSelector","fumBuyPriceSelector","fumSellPriceSelector","chainlinkPriceSelector","compoundPriceSelector","uniswapPriceSelector","coingeckoPriceSelector","medianPriceSelector","colours","colorisor","actualNumber","ranges","usmPriceHighlight","difference","Math","abs","Number","parseFloat","oracleHighlight","referencePrice","actualPrice","decimalPlaces","numberString","decimals","toFixed","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","toPercentage","decimalString","num","toString","stringMul","b","HealthCard","this","props","usmCollateral","usmCollateralUSD","usmDebtRatio","usmEthBuffer","usmEthBufferUSD","Card","Body","Title","Table","striped","hover","size","style","backgroundColor","Component","connect","coingeckoPrice","OracleCard","chainlinkPrice","compoundPrice","uniswapPrice","medianPrice","colSpan","USMCard","usmSupply","usmMints","usmBurns","usmMarketCap","usmMarketCapUSD","usmBuyPrice","usmBuyPriceUSD","usmSellPrice","usmSellPriceUSD","FUMCard","fumMarketCap","fumMarketCapUSD","fumSupply","fumMints","fumBurns","fumBuyPrice","fumBuyPriceUSD","fumSellPrice","fumSellPriceUSD","App","networkProvider","className","Container","Alert","variant","href","target","rel","Row","Col","sm","md","rootReducer","combineReducers","app","action","oracle","loggerMiddleware","createLogger","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preLoadedState","Boolean","location","hostname","match","ReactDOM","render","store","createStore","applyMiddleware","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d9437e36.chunk.js","sourcesContent":["export const usm = {\n  name: 'usm',\n  abi: [\n    \"function mint(address to, uint minUsmOut) external payable returns (uint)\",\n    \"function burn(address from, address payable to, uint usmToBurn, uint minEthOut) external returns (uint)\",\n    \"function fund(address to, uint minFumOut) external payable returns (uint)\",\n    \"function defund(address from, address payable to, uint fumToBurn, uint minEthOut) external returns (uint)\",\n    \"function defundFromFUM(address from, address payable to, uint fumToBurn, uint minEthOut) external returns (uint)\",\n    \"function ethPool() public view returns (uint pool)\",\n    \"function minFumBuyPrice() public view returns (uint mfbp)\",\n    \"function buySellAdjustment() public view returns (uint adjustment)\",\n    \"function ethBuffer(uint8 upOrDown) external view returns (int buffer)\",\n    \"function ethToUsm(uint ethAmount, uint8 upOrDown) external view returns (uint usmOut)\",\n    \"function usmToEth(uint usmAmount, uint8 upOrDown) external view returns (uint ethOut)\",\n    \"function debtRatio() external view returns (uint ratio)\",\n    \"function usmPrice(uint8 side) external view returns (uint price)\",\n    \"function fumPrice(uint8 side) external view returns (uint price)\",\n    \"function latestChainlinkPrice() public view returns (uint price)\",\n    \"function latestCompoundPrice() public view returns (uint price)\",\n    \"function latestUniswapTWAPPrice() public view returns (uint price)\",\n    \"function latestPrice() public virtual view returns (uint price)\",\n    \n    \"event MinFumBuyPriceChanged(uint previous, uint latest)\",\n    \"event BuySellAdjustmentChanged(uint previous, uint latest)\",\n  \n    \"function totalSupply() external view returns (uint256)\",\n    \"function balanceOf(address account) external view returns (uint256)\",\n    \"function transfer(address recipient, uint256 amount) external returns (bool)\",\n    \"function allowance(address owner, address spender) external view returns (uint256)\",\n    \"function approve(address spender, uint256 amount) external returns (bool)\",\n    \"function transferFrom(address sender, address recipient, uint256 amount) external returns (bool)\",\n    \"event Transfer(address indexed from, address indexed to, uint256 value)\",\n  ],\n  address: {\n    '1': '0x03eb7Ce2907e202bB70BAE3D7B0C588573d3cECC'\n  }\n}\n\nexport const fum = {\n  name: 'fum',\n  abi: [\n    \"function totalSupply() external view returns (uint256)\",\n    \"event Transfer(address indexed from, address indexed to, uint256 value)\"\n  ],\n  address: {\n    '1': '0xf04a5D82ff8a801f7d45e9C14CDcf73defF1a394'\n  }\n}\n\n","export const chainlink = \"chainlink\"\nexport const compound = \"compound\"\nexport const uniswap = \"uniswap\"\nexport const coingecko = \"coingecko\"\nexport const median = \"median\"\n","import { chainlink, coingecko, compound, median, uniswap } from \"../oracles\";\nimport { fum, usm } from \"../tokens\";\n\nexport function networkLoaded(provider){\n  return {\n    type: 'NETWORK_LOADED',\n    provider\n  }\n}\n\nexport function usmLoaded(usm) {\n  return {\n    type: 'USM_LOADED',\n    usm\n  }\n}\n\nexport function fumLoaded(fum) {\n  return {\n    type: 'FUM_LOADED',\n    fum\n  }\n}\n\nexport function setLatestOraclePrice(source, price) {\n  switch (source) {\n    case chainlink:\n      return {\n        type: 'ORACLE_PRICE_CHAINLINK',\n        price\n      }\n    case compound:\n      return {\n        type: 'ORACLE_PRICE_COMPOUND',\n        price\n      }\n    case uniswap:\n      return {\n        type: 'ORACLE_PRICE_UNISWAP',\n        price\n      }\n    case coingecko:\n      return {\n        type: 'ORACLE_PRICE_COINGECKO',\n        price\n      }\n    case median:\n      return {\n        type: 'ORACLE_PRICE_MEDIAN',\n        price\n      }\n    default:\n      break;\n  }\n}\n\nexport function setCollateral(collateral) {\n  return {\n    type: 'USM_COLLATERAL',\n    collateral\n  }\n}\n\nexport function setDebtRatio(debtRatio) {\n  return {\n    type: 'USM_DEBT_RATIO',\n    debtRatio\n  }\n}\n\nexport function setEthBuffer(ethBuffer) {\n  return {\n    type: 'USM_ETH_BUFFER',\n    ethBuffer\n  }\n}\n\nexport function setUSMPrice(buyPrice, sellPrice) {\n  return {\n    type: 'USM_PRICE',\n    buyPrice,\n    sellPrice\n  }\n}\n\nexport function setFUMPrice(buyPrice, sellPrice) {\n  return {\n    type: 'FUM_PRICE',\n    buyPrice,\n    sellPrice\n  }\n}\n\nexport function setTotalSupply(tokenName, supply) {\n  switch (tokenName) {\n    case usm.name:\n      return {\n        type: 'USM_TOTAL_SUPPLY',\n        supply\n      }\n    case fum.name:\n      return {\n        type: 'FUM_TOTAL_SUPPLY',\n        supply\n      }\n    default:\n      break;\n  }\n}\n\nexport function setMints(tokenName, mints) {\n  switch (tokenName) {\n    case usm.name:\n      return {\n        type: 'USM_MINTS',\n        mints\n      }\n    case fum.name:\n      return {\n        type: 'FUM_MINTS',\n        mints\n      }\n    default:\n      break;\n  }\n}\n\nexport function setBurns(tokenName, burns) {\n  switch (tokenName) {\n    case usm.name:\n      return {\n        type: 'USM_BURNS',\n        burns\n      }\n    case fum.name:\n      return {\n        type: 'FUM_BURNS',\n        burns\n      }\n    default:\n      break;\n  }\n}\n","import { ethers } from \"ethers\"\nimport { setCollateral, setDebtRatio, setEthBuffer, setFUMPrice, setUSMPrice } from \"../actions\"\n\nexport const loadCollateralData = async (dispatch, contract) => {\n  getCollateral(dispatch, contract)\n  getDebtRatio(dispatch, contract)\n  getEthBuffer(dispatch, contract)\n  getUSMPrice(dispatch, contract)\n  getFUMPrice(dispatch, contract)\n}\n\nexport const getCollateral = async (dispatch, contract) => {\n  const collateral = await contract.ethPool()\n  const formattedCollateral = ethers.utils.formatEther(collateral)\n  dispatch(setCollateral(formattedCollateral))\n}\n\nexport const getDebtRatio = async (dispatch, contract) => {\n  const ratio = await contract.debtRatio()\n  const formattedRatio = ethers.utils.formatEther(ratio)\n  dispatch(setDebtRatio(formattedRatio))\n}\n\nexport const getEthBuffer = async (dispatch, contract) => {\n  const ethBuffer = await contract.ethBuffer(0)\n  const formattedBuffer = ethers.utils.formatEther(ethBuffer)\n  dispatch(setEthBuffer(formattedBuffer))\n}\n\nexport const getUSMPrice = async (dispatch, contract) => {\n  const buyPrice = await contract.usmPrice(0)\n  const formattedBuyPrice = ethers.utils.formatEther(buyPrice)\n  const sellPrice = await contract.usmPrice(1)\n  const formattedSellPrice = ethers.utils.formatEther(sellPrice)\n  dispatch(setUSMPrice(formattedBuyPrice, formattedSellPrice))\n}\n\nexport const getFUMPrice = async (dispatch, contract) => {\n  const buyPrice = await contract.fumPrice(0)\n  const formattedBuyPrice = ethers.utils.formatEther(buyPrice)\n  const sellPrice = await contract.fumPrice(1)\n  const formattedSellPrice = ethers.utils.formatEther(sellPrice)\n  dispatch(setFUMPrice(formattedBuyPrice, formattedSellPrice))\n}\n","import { ethers } from \"ethers\"\nimport { setBurns, setMints, setTotalSupply } from \"../actions\"\n\nexport const loadERC20Data = async (dispatch, token, tokenContract) => {\n  getTotalSupply(dispatch, token, tokenContract)\n  getTotalMints(dispatch, token, tokenContract)\n  getTotalBurns(dispatch, token, tokenContract)\n}\n\nexport const getTotalSupply = async (dispatch, token, erc20Contract) => {\n  const supply = await erc20Contract.totalSupply()\n  const formattedSupply = ethers.utils.formatEther(supply)\n  dispatch(setTotalSupply(token.name, formattedSupply))\n}\n\nexport const getTotalMints = async (dispatch, token, erc20Contract) => {\n  const mintFilter = erc20Contract.filters.Transfer(ethers.constants.AddressZero, null)\n  const mints = await erc20Contract.queryFilter(mintFilter, 0)\n  dispatch(setMints(token.name, mints.length))\n}\n\nexport const getTotalBurns = async (dispatch, token, erc20Contract) => {\n  const burnFilter = erc20Contract.filters.Transfer(null, ethers.constants.AddressZero)\n  const burns = await erc20Contract.queryFilter(burnFilter, 0)\n  dispatch(setBurns(token.name, burns.length))\n}\n","import { ethers } from \"ethers\"\nimport { chainlink, coingecko, compound, median, uniswap } from \"../../oracles\"\nimport { setLatestOraclePrice } from \"../actions\"\nimport axios from 'axios'\n\nexport const loadOracleData = async (dispatch, contract) => {\n  getCoingeckoPrice(dispatch)\n  getChainlinkPrice(dispatch, contract)\n  getCompoundPrice(dispatch, contract)\n  getUniswapPrice(dispatch, contract)\n  getMedianPrice(dispatch, contract)\n}\n\nexport const getCoingeckoPrice = async (dispatch) => {\n  axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd')\n    .then(function (response) {\n      dispatch(setLatestOraclePrice(coingecko, response.data.ethereum.usd))\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n}\n\nexport const getChainlinkPrice = async (dispatch, contract) => {\n  const price = await contract.latestChainlinkPrice()\n  const formattedPrice = ethers.utils.formatEther(price)\n  dispatch(setLatestOraclePrice(chainlink, formattedPrice))\n}\n\nexport const getCompoundPrice = async (dispatch, contract) => {\n  const price = await contract.latestCompoundPrice()\n  const formattedPrice = ethers.utils.formatEther(price)\n  dispatch(setLatestOraclePrice(compound, formattedPrice))\n}\n\nexport const getUniswapPrice = async (dispatch, contract) => {\n  const price = await contract.latestUniswapTWAPPrice()\n  const formattedPrice = ethers.utils.formatEther(price)\n  dispatch(setLatestOraclePrice(uniswap, formattedPrice))\n}\n\nexport const getMedianPrice = async (dispatch, contract) => {\n  const price = await contract.latestPrice()\n  const formattedPrice = ethers.utils.formatEther(price)\n  dispatch(setLatestOraclePrice(median, formattedPrice))\n}\n","import { ethers } from \"ethers\"\nimport { fum, usm } from \"../tokens\"\nimport { fumLoaded, networkLoaded, usmLoaded } from \"./actions\"\nimport { loadCollateralData } from \"./interactions/cdp\"\nimport { loadERC20Data } from \"./interactions/erc20\"\nimport { loadOracleData } from \"./interactions/oracles\"\n\nexport const loadNetwork = async (dispatch) => {\n  const provider = new ethers.providers.JsonRpcProvider(\"https://mainnet.infura.io/v3/1be1f8b7b85a47e4949bc1057660a81d\")\n  dispatch(networkLoaded(provider))\n  loadUSM(dispatch, provider)\n  loadFUM(dispatch, provider)\n}\n\nexport const loadUSM = async (dispatch, provider) => {\n  const network = await provider.getNetwork()\n  const abi = usm.abi\n  const address = usm.address[network.chainId]\n  const usmContract = new ethers.Contract(address, abi, provider)\n  dispatch(usmLoaded(usmContract))\n  loadERC20Data(dispatch, usm, usmContract)\n  loadCollateralData(dispatch, usmContract)\n  loadOracleData(dispatch, usmContract)\n}\n\nexport const loadFUM = async (dispatch, provider) => {\n  const network = await provider.getNetwork()\n  const abi = fum.abi\n  const address = fum.address[network.chainId]\n  const fumContract = new ethers.Contract(address, abi, provider)\n  dispatch(fumLoaded(fumContract))\n  loadERC20Data(dispatch, fum, fumContract)\n}\n","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\n\n//APP\nconst networkProvider = state => get(state, 'app.provider', null);\nexport const networkProviderSelector = createSelector(networkProvider, w => w);\n\nconst usmContract = state => get(state, 'app.usm', null);\nexport const usmContractSelector = createSelector(usmContract, w => w);\n\n//USM\nconst usmSupply = state => get(state, 'usm.supply', 0);\nexport const usmSupplySelector = createSelector(usmSupply, w => w);\n\nconst usmMints = state => get(state, 'usm.mints', 0);\nexport const usmMintsSelector = createSelector(usmMints, w => w);\n\nconst usmBurns = state => get(state, 'usm.burns', 0);\nexport const usmBurnsSelector = createSelector(usmBurns, w => w);\n\nconst usmCollateral = state => get(state, 'usm.collateral', 0);\nexport const usmCollateralSelector = createSelector(usmCollateral, w => w);\n\nconst usmDebtRatio = state => get(state, 'usm.debtRatio', 0);\nexport const usmDebtRatioSelector = createSelector(usmDebtRatio, w => w);\n\nconst usmEthBuffer = state => get(state, 'usm.ethBuffer', 0);\nexport const usmEthBufferSelector = createSelector(usmEthBuffer, w => w);\n\nconst usmBuyPrice = state => get(state, 'usm.buyPrice', 0);\nexport const usmBuyPriceSelector = createSelector(usmBuyPrice, w => w);\n\nconst usmSellPrice = state => get(state, 'usm.sellPrice', 0);\nexport const usmSellPriceSelector = createSelector(usmSellPrice, w => w);\n\n//FUM\nconst fumSupply = state => get(state, 'fum.supply', 0);\nexport const fumSupplySelector = createSelector(fumSupply, w => w);\n\nconst fumMints = state => get(state, 'fum.mints', 0);\nexport const fumMintsSelector = createSelector(fumMints, w => w);\n\nconst fumBurns = state => get(state, 'fum.burns', 0);\nexport const fumBurnsSelector = createSelector(fumBurns, w => w);\n\nconst fumBuyPrice = state => get(state, 'fum.buyPrice', 0);\nexport const fumBuyPriceSelector = createSelector(fumBuyPrice, w => w);\n\nconst fumSellPrice = state => get(state, 'fum.sellPrice', 0);\nexport const fumSellPriceSelector = createSelector(fumSellPrice, w => w);\n\n//ORACLE\nconst chainlinkPrice = state => get(state, 'oracle.chainlinkPrice', 0);\nexport const chainlinkPriceSelector = createSelector(chainlinkPrice, w => w);\n\nconst compoundPrice = state => get(state, 'oracle.compoundPrice', 0);\nexport const compoundPriceSelector = createSelector(compoundPrice, w => w);\n\nconst uniswapPrice = state => get(state, 'oracle.uniswapPrice', 0);\nexport const uniswapPriceSelector = createSelector(uniswapPrice, w => w);\n\nconst coingeckoPrice = state => get(state, 'oracle.coingeckoPrice', 0);\nexport const coingeckoPriceSelector = createSelector(coingeckoPrice, w => w);\n\nconst medianPrice = state => get(state, 'oracle.medianPrice', 0);\nexport const medianPriceSelector = createSelector(medianPrice, w => w);\n","export const colours = [\n  '#00ff44',\n  '#aaff00',\n  '#fbff00',\n  '#ffe100',\n  '#ffc400',\n  '#ff9d00',\n  '#ff8400',\n  '#ff5900',\n  '#ff0000'\n]\n\nexport const colorisor = (actualNumber, ranges) => {\n  if (actualNumber <= ranges[0]) {\n    return colours[0]\n  }\n  else if (actualNumber > ranges[0] && actualNumber <= ranges[1]) {\n    return colours[1]\n  }\n  else if (actualNumber > ranges[1] && actualNumber <= ranges[2]) {\n    return colours[2]\n  }\n  else if (actualNumber > ranges[2] && actualNumber <= ranges[3]) {\n    return colours[3]\n  }\n  else if (actualNumber > ranges[3] && actualNumber <= ranges[4]) {\n    return colours[4]\n  }\n  else if (actualNumber > ranges[4] && actualNumber <= ranges[5]) {\n    return colours[5]\n  }\n  else if (actualNumber > ranges[5] && actualNumber <= ranges[6]) {\n    return colours[6]\n  }\n  else if (actualNumber > ranges[6] && actualNumber <= ranges[7]) {\n    return colours[7]\n  }\n  else if (actualNumber > ranges[7]) {\n    return colours[8]\n  }\n}\n\nexport const usmPriceHighlight = (price) => {\n  const difference = Math.abs(1.00 - Number.parseFloat(price))\n  const ranges = [.01, .02, .03, .04, .05, .06, .07, .08]\n  return colorisor(difference, ranges)\n}\n\nexport const debtRatioHighlight = (debtRatio) => {\n  const ranges = [.5, .6, .65, .7, .725, .75, .775, .8]\n  return colorisor(debtRatio, ranges)\n}\n\nexport const oracleHighlight = (referencePrice, actualPrice) => {\n  const difference = Math.abs(Number.parseFloat(referencePrice) - Number.parseFloat(actualPrice))\n  const ranges = [2, 4, 6, 8, 10, 12, 14, 20]\n  return colorisor(difference, ranges)\n}\n\nexport const decimalPlaces = (numberString, decimals = 2) => {\n  return Number(\n    Number.parseFloat(numberString).toFixed(decimals)\n  ).toLocaleString(undefined, {minimumFractionDigits: decimals, maximumFractionDigits: decimals})\n}\n\nexport const toPercentage = (decimalString) => {\n  const num = Number.parseFloat(decimalString) * 100\n  return decimalPlaces(num.toString())\n}\n\nexport const stringMul = (a, b) => {\n  return (Number.parseFloat(a) * Number.parseFloat(b))\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coingeckoPriceSelector, usmCollateralSelector, usmDebtRatioSelector, usmEthBufferSelector } from './redux/selectors';\nimport { Card, Table } from 'react-bootstrap';\nimport { debtRatioHighlight, decimalPlaces, toPercentage } from './utils';\n\nclass HealthCard extends Component {\n  render () {\n\n    const {usmCollateral, usmCollateralUSD, usmDebtRatio, usmEthBuffer, usmEthBufferUSD} = this.props;\n\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            Protocol Health\n          </Card.Title>\n          <Table striped hover size=\"sm\">\n            <tbody>\n              <tr>\n                <td>Total Collateral</td>\n                <td>Ξ {decimalPlaces(usmCollateral)}</td>\n                <td>$ {decimalPlaces(usmCollateralUSD)}</td>\n              </tr>\n              <tr>\n                <td>Buffer</td>\n                <td>Ξ {decimalPlaces(usmEthBuffer)}</td>\n                <td>$ {decimalPlaces(usmEthBufferUSD)}</td>\n              </tr>\n              <tr style={{backgroundColor: debtRatioHighlight(usmDebtRatio)}}>\n                <td>Debt Ratio</td>\n                <td></td>\n                <td>{toPercentage(usmDebtRatio)} %</td>\n              </tr>                  \n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const coingeckoPrice = coingeckoPriceSelector(state)\n  const usmCollateral = usmCollateralSelector(state)\n  const usmCollateralUSD = usmCollateral * coingeckoPrice\n  const usmEthBuffer = usmEthBufferSelector(state)\n  const usmEthBufferUSD = usmEthBuffer * coingeckoPrice\n  return {\n    coingeckoPrice,\n    usmCollateral,\n    usmCollateralUSD,\n    usmEthBuffer,\n    usmEthBufferUSD,\n    usmDebtRatio: usmDebtRatioSelector(state),\n  }\n}\n\nexport default connect(mapStateToProps)(HealthCard);\n\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { chainlinkPriceSelector, medianPriceSelector, coingeckoPriceSelector, compoundPriceSelector, uniswapPriceSelector } from './redux/selectors';\nimport { Card, Table } from 'react-bootstrap';\nimport { decimalPlaces, oracleHighlight } from './utils';\n\nclass OracleCard extends Component {\n  render() {\n\n    const {chainlinkPrice, compoundPrice, uniswapPrice, coingeckoPrice, medianPrice} = this.props;\n\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            Oracle Performance\n          </Card.Title>\n          <Table striped hover size=\"sm\">\n            <tbody>\n              <tr>\n                <th colSpan={2}>Off Chain Reference (not used)</th>\n              </tr>\n              <tr>\n                <td>Coingecko - ETH</td>\n                <td>$ {decimalPlaces(coingeckoPrice)}</td>\n              </tr>\n              <tr>\n                <th colSpan={2}>USMFUM ETH Price</th>\n              </tr>\n              <tr style={{backgroundColor: oracleHighlight(coingeckoPrice, medianPrice)}}>\n                <td>Medianized Oracle</td>\n                <td>$ {decimalPlaces(medianPrice)}</td>\n              </tr>\n              <tr>\n                <th colSpan={2}>Median Sources</th>\n              </tr>\n              <tr style={{backgroundColor: oracleHighlight(coingeckoPrice, chainlinkPrice)}}>\n                <td>Chainlink</td>\n                <td>$ {decimalPlaces(chainlinkPrice)}</td>\n              </tr>\n              <tr style={{backgroundColor: oracleHighlight(coingeckoPrice, compoundPrice)}}>\n                <td>Compound</td>\n                <td>$ {decimalPlaces(compoundPrice)}</td>\n              </tr>\n              <tr style={{backgroundColor: oracleHighlight(coingeckoPrice, uniswapPrice)}}>\n                <td>Uniswap TWAP</td>\n                <td>$ {decimalPlaces(uniswapPrice)}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    coingeckoPrice: coingeckoPriceSelector(state),\n    chainlinkPrice: chainlinkPriceSelector(state),\n    compoundPrice: compoundPriceSelector(state),\n    uniswapPrice: uniswapPriceSelector(state),\n    medianPrice: medianPriceSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(OracleCard)\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coingeckoPriceSelector, usmBurnsSelector, usmBuyPriceSelector, usmMintsSelector, usmSellPriceSelector, usmSupplySelector } from './redux/selectors';\nimport { Card, Table } from 'react-bootstrap';\nimport { decimalPlaces, stringMul, usmPriceHighlight } from './utils';\n\nclass USMCard extends Component {\n  render () {\n    const {usmSupply, usmMints, usmBurns, usmMarketCap, usmMarketCapUSD,\n      usmBuyPrice, usmBuyPriceUSD, usmSellPrice, usmSellPriceUSD} = this.props\n\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            USM Stats\n          </Card.Title>\n          <Table striped hover size=\"sm\">\n            <tbody>\n              <tr>\n                <td>Market Cap</td>\n                <td>Ξ {decimalPlaces(usmMarketCap)}</td>\n                <td>$ {decimalPlaces(usmMarketCapUSD)}</td>\n              </tr>\n              <tr style={{backgroundColor: usmPriceHighlight(usmBuyPriceUSD)}}>\n                <td>Buy Price</td>\n                <td>Ξ {decimalPlaces(usmBuyPrice, 5)}</td>\n                <td>$ {decimalPlaces(usmBuyPriceUSD)}</td>\n              </tr>\n              <tr style={{backgroundColor: usmPriceHighlight(usmSellPriceUSD)}}>\n                <td>Sell Price</td>\n                <td>Ξ {decimalPlaces(usmSellPrice, 5)}</td>\n                <td>$ {decimalPlaces(usmSellPriceUSD)}</td>\n              </tr>\n              <tr>\n                <td>Total Supply</td>\n                <td>-</td>\n                <td>{decimalPlaces(usmSupply)}</td>\n              </tr>\n              <tr>\n                <td>No. of Mints</td>\n                <td>-</td>\n                <td>{usmMints}</td>\n              </tr>\n              <tr>\n                <td>No. of Burns</td>\n                <td>-</td>\n                <td>{usmBurns}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const coingeckoPrice = coingeckoPriceSelector(state)\n\n  const usmSupply = usmSupplySelector(state)\n  const usmBuyPrice = usmBuyPriceSelector(state)\n  const usmSellPrice = usmSellPriceSelector(state)\n  const usmMarketCap = usmSupply * usmBuyPrice\n  const usmBuyPriceUSD = stringMul(usmBuyPrice, coingeckoPrice)\n  const usmSellPriceUSD = stringMul(usmSellPrice, coingeckoPrice)\n  const usmMarketCapUSD = stringMul(usmMarketCap, coingeckoPrice)\n  return {\n    usmMarketCap,\n    usmMarketCapUSD,\n    usmSupply,\n    usmMints: usmMintsSelector(state),\n    usmBurns: usmBurnsSelector(state),\n    usmBuyPrice,\n    usmBuyPriceUSD,\n    usmSellPrice,\n    usmSellPriceUSD,\n  }\n}\n\nexport default connect(mapStateToProps)(USMCard);\n\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { coingeckoPriceSelector, fumBurnsSelector, fumBuyPriceSelector, fumMintsSelector, fumSellPriceSelector, fumSupplySelector } from './redux/selectors';\nimport { Card, Table } from 'react-bootstrap';\nimport { decimalPlaces, stringMul } from './utils';\n\nclass FUMCard extends Component {\n  render() {\n    const {\n      fumMarketCap, fumMarketCapUSD, fumSupply, fumMints, fumBurns,\n      fumBuyPrice, fumBuyPriceUSD, fumSellPrice, fumSellPriceUSD\n    } = this.props\n\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            FUM Stats\n          </Card.Title>\n          <Table striped hover size=\"sm\">\n            <tbody>\n              <tr>\n                <td>Market Cap</td>\n                <td>Ξ {decimalPlaces(fumMarketCap)}</td>\n                <td>$ {decimalPlaces(fumMarketCapUSD)}</td>\n              </tr>\n              <tr>\n                <td>Buy Price</td>\n                <td>Ξ {decimalPlaces(fumBuyPrice, 5)}</td>\n                <td>$ {decimalPlaces(fumBuyPriceUSD)}</td>\n              </tr>\n              <tr>\n                <td>Sell Price (ETH)</td>\n                <td>Ξ {decimalPlaces(fumSellPrice, 5)}</td>\n                <td>$ {decimalPlaces(fumSellPriceUSD)}</td>\n              </tr>\n              <tr>\n                <td>Total Supply</td>\n                <td>-</td>\n                <td>{decimalPlaces(fumSupply)}</td>\n              </tr>\n              <tr>\n                <td>No. of Mints</td>\n                <td>-</td>\n                <td>{fumMints}</td>\n              </tr>\n              <tr>\n                <td>No. of Burns</td>\n                <td>-</td>\n                <td>{fumBurns}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  const coingeckoPrice = coingeckoPriceSelector(state)\n\n  const fumSupply = fumSupplySelector(state)\n  const fumBuyPrice = fumBuyPriceSelector(state)\n  const fumSellPrice = fumSellPriceSelector(state)\n  const fumMarketCap = fumSupply * fumBuyPrice\n\n  const fumBuyPriceUSD = stringMul(fumBuyPrice, coingeckoPrice)\n  const fumSellPriceUSD = stringMul(fumSellPrice, coingeckoPrice)\n  const fumMarketCapUSD = stringMul(fumMarketCap, coingeckoPrice)\n\n  return {\n    fumMarketCap,\n    fumMarketCapUSD,\n    fumSupply,\n    fumMints: fumMintsSelector(state),\n    fumBurns: fumBurnsSelector(state),\n    fumBuyPrice,\n    fumBuyPriceUSD,\n    fumSellPrice,\n    fumSellPriceUSD,\n    coingeckoPrice,\n  }\n}\n\nexport default connect(mapStateToProps)(FUMCard);\n","import './App.scss';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loadNetwork } from './redux/interactions';\nimport { networkProviderSelector } from './redux/selectors';\nimport { Col, Container, Row, Alert } from 'react-bootstrap';\nimport HealthCard from './HealthCard';\nimport OracleCard from './OracleCard';\nimport USMCard from './USMCard';\nimport FUMCard from './FUMCard';\n\nclass App extends Component {\n\n  render() {\n\n    const {dispatch, networkProvider } = this.props;\n\n    if (!networkProvider) {\n      loadNetwork(dispatch);\n    }\n\n    return (\n      <div className=\"App\">\n        <Container>\n          <Alert variant=\"warning\">\n            <b>Displaying live data for <a href=\"https://twitter.com/usmfum/status/1339323408618835969\" target=\"_blank\" rel=\"noreferrer\">Baby-USM.</a></b>\n            This is a temporary \"live\" protocol used for research purposes. On the 15th of January 2021, the Baby-USM protocol will become withdraw-only and read-only.\n            The data from this trial run will be analysed in the run up to the full release of USM.\n          </Alert>\n          <Row>\n            <Col sm=\"12\" md=\"6\">\n              <HealthCard />\n            </Col>\n            <Col sm=\"12\" md=\"6\">\n              <OracleCard />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\" md=\"6\">\n              <USMCard />\n            </Col>\n            <Col sm=\"12\" md=\"6\">\n              <FUMCard />\n            </Col>\n            \n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    networkProvider: networkProviderSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\n\nfunction app(state = {}, action) {\n  switch (action.type) {\n    case 'NETWORK_LOADED':\n      return { ...state, provider: action.provider }\n    case 'USM_LOADED':\n      return { ...state, usm: action.usm }\n    case 'FUM_LOADED':\n      return { ...state, fum: action.fum }\n    default:\n      return state;\n  }\n}\n\nfunction usm(state = {}, action) {\n  switch (action.type) {\n    case 'USM_TOTAL_SUPPLY':\n      return { ...state, supply: action.supply }\n    case 'USM_MINTS':\n      return { ...state, mints: action.mints }\n    case 'USM_BURNS':\n      return { ...state, burns: action.burns }\n    case 'USM_COLLATERAL':\n      return { ...state, collateral: action.collateral }\n    case 'USM_DEBT_RATIO':\n      return { ...state, debtRatio: action.debtRatio }\n    case 'USM_ETH_BUFFER':\n      return { ...state, ethBuffer: action.ethBuffer }\n    case 'USM_PRICE':\n      return { ...state, buyPrice: action.buyPrice, sellPrice: action.sellPrice }\n    default:\n      return state;\n  }\n}\n\nfunction fum(state = {}, action) {\n  switch (action.type) {\n    case 'FUM_TOTAL_SUPPLY':\n      return { ...state, supply: action.supply }\n    case 'FUM_MINTS':\n      return { ...state, mints: action.mints }\n    case 'FUM_BURNS':\n      return { ...state, burns: action.burns }\n    case 'FUM_PRICE':\n      return { ...state, buyPrice: action.buyPrice, sellPrice: action.sellPrice }\n    default:\n      return state;\n  }\n}\n\nfunction oracle(state = {}, action) {\n  switch (action.type) {\n    case 'ORACLE_PRICE_CHAINLINK':\n      return { ...state, chainlinkPrice: action.price }\n    case 'ORACLE_PRICE_COMPOUND':\n      return { ...state, compoundPrice: action.price }\n    case 'ORACLE_PRICE_UNISWAP':\n      return { ...state, uniswapPrice: action.price }\n    case 'ORACLE_PRICE_COINGECKO':\n      return { ...state, coingeckoPrice: action.price }\n    case 'ORACLE_PRICE_MEDIAN':\n      return { ...state, medianPrice: action.price }\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = new combineReducers({\n  app, usm, fum, oracle\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger }  from \"redux-logger\";\nimport rootReducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n//connects redux browser to app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preLoadedState){\n  return createStore(\n    rootReducer, \n    preLoadedState,\n    composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './redux/configure';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}